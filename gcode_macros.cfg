#[gcode_macro my_cmd]
#gcode:
#   A list of G-Code commands to execute in place of "my_cmd". See
#   docs/Command_Templates.md for G-Code format. This parameter must
#   be provided.
#variable_<name>:
#   One may specify any number of options with a "variable_" prefix.
#   The given variable name will be assigned the given value (parsed
#   as a Python literal) and will be available during macro expansion.
#   For example, a config with "variable_fan_speed = 75" might have
#   gcode commands containing "M106 S{ fan_speed * 255 }". Variables
#   can be changed at run-time using the SET_GCODE_VARIABLE command
#   (see docs/Command_Templates.md for details). Variable names may
#   not use upper case characters.
#rename_existing:
#   This option will cause the macro to override an existing G-Code
#   command and provide the previous definition of the command via the
#   name provided here. This can be used to override builtin G-Code
#   commands. Care should be taken when overriding commands as it can
#   cause complex and unexpected results. The default is to not
#   override an existing G-Code command.
#description: G-Code macro
#   This will add a short description used at the HELP command or while
#   using the auto completion feature. Default "G-Code macro"

###################################################

[gcode_macro HOME_CENTER]
description: Center Home Low Z
gcode:
  M117 HOME CENTER
  SET_FAN_SPEED FAN=pi_fan SPEED=0.5
  HOME_YET
  G90
  G1 Z125 F5000
  G1 X90 Y100 F10000
###################################################

[gcode_macro HOME_PREHEAT]
description: PREHEAT Home
gcode:
  M117 HOME PREHEAT
  HOME_YET 
  G90
  G1 Z100 F5000
  G1 X90 Y100 F10500
  SET_FAN_SPEED FAN=pi_fan SPEED=0.5

###################################################

[gcode_macro Z_CAL]
description: Center Home Z 5mm
gcode:
  M117 Z Cal-5mm
  HOME_YET 
  G90
  G1 X90 Y100 F9500
  G1 Z5 F5000
  SET_FAN_SPEED FAN=pi_fan SPEED=0.5

###################################################

[gcode_macro BED_READY]
description: PREHEAT Bed Position
gcode:
  M117 BED READY
  HOME_YET 
  G90
  G1 Z30 F5000
  G1 X90 Y100 F10500
  SET_FAN_SPEED FAN=pi_fan SPEED=0.75

###################################################

[gcode_macro NOZZLE_FRONT]
description: Center Nozzle at front
gcode:
  M117 NOZZLE FRONT
  SET_FAN_SPEED FAN=pi_fan SPEED=0.5
  HOME_YET
  G90
  G1 Z230 F5000
  G1 X90 Y2 F10000
  SET_FAN_SPEED FAN=pi_fan SPEED=0.5

###################################################

[gcode_macro HOME_YET]
description: Home axes that aren't homed
gcode:
  CG28

################################################

[gcode_macro set_red]
description: Set Backlight to RED
gcode:
  SET_PIN PIN=backlight VALUE=1.00
  SET_PIN PIN=caselight VALUE=0.00
  SET_LED LED="expanderPixel" RED=0.58 GREEN=0.0 BLUE=0.0 TRANSMIT=1

  ################################################

[gcode_macro set_blue]
description: Set Backlight to BLUE
gcode:
  SET_PIN PIN=backlight VALUE=1.00
  SET_PIN PIN=caselight VALUE=0.00
  SET_LED LED="expanderPixel" RED=0.0 GREEN=0.0 BLUE=0.58 TRANSMIT=1
################################################
[gcode_macro set_green]
description: Set Backlight to GREEN
gcode:
  SET_PIN PIN=backlight VALUE=1.00
  SET_PIN PIN=caselight VALUE=0.00
  SET_LED LED="expanderPixel" RED=0.0 GREEN=0.58 BLUE=0.0 TRANSMIT=1
################################################
[gcode_macro set_wht]
description: Set Backlight to WHT
gcode:
  SET_PIN PIN=backlight VALUE=1.00
  SET_PIN PIN=caselight VALUE=0.00
  SET_LED LED="expanderPixel" RED=0.58 GREEN=0.58 BLUE=0.58 TRANSMIT=1
  ################################################
[gcode_macro CASELIGHT_ON]
description: Set Caselight to ON
gcode:
    no_leds
    SET_LED LED="expanderPixel" RED=0.65 GREEN=0.25 BLUE=0.0 TRANSMIT=1
  ################################################
[gcode_macro CASELIGHT_OFF]
description: Set Caselight to OFF
gcode:
  no_leds
  SET_LED LED="expanderPixel" RED=0.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1
  ################################################
[gcode_macro PID_TUNE_BED]
description: PID Tune Bed at 110C
gcode:
  M117 PID Tune Bed
  HOME_YET
  HOME_CENTER
  STATUS_BUSY
  SET_FAN_SPEED FAN=BedFans SPEED=85
  STATUS_HEATING
  M117 PID Tune Bed
  PID_CALIBRATE HEATER=heater_bed TARGET=110
  STATUS_READY
  SET_FAN_SPEED FAN=pi_fan SPEED=0.75
  ################################################
[gcode_macro PID_TUNE_HOTEND]
description: PID Tune Hotend at 255C
gcode:
  M106 S255
  M117 PID Tune Ext
  HOME_YET
  HOME_PREHEAT
  STATUS_BUSY
  STATUS_HEATING
  PID_CALIBRATE HEATER=extruder TARGET=255
  STATUS_READY 
  SET_FAN_SPEED FAN=pi_fan SPEED=0.75
################################################
[gcode_macro LOAD_FILAMENT]
gcode:
   M117 Filament loading
   SET_FAN_SPEED FAN=pi_fan SPEED=0.85
   NOZZLE_FRONT
   M82                      #set extruder to absolute mode
   G92 E0
   G4 P2000             # wait for two second
   FORCE_MOVE STEPPER=extruder DISTANCE=15 VELOCITY=5 ACCEL=1000  # load filament inside the gears force move needs to be enabled
   M109 S245 T0       # set hotend temperature and wait
   G1 E100 F300        # extrude 100mm
   M400                      # wait for current move to finish
   M104 S0 T0           # set hotend temperature to 0
   G92 E0                  # zero extruder position
   SET_FAN_SPEED FAN=pi_fan SPEED=0.5
   M117 Loaded..Ready to Go
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M117 Filament Unload
   SET_FAN_SPEED FAN=pi_fan SPEED=0.85
   M83                            ; set extruder to relative
   M109 S235 T0
   G1 E5 F300                    ; extrude a little to soften tip
   G1 E-5 F3600         #extract filament to cold end
   G1 E-95 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute
   M400                      # wait for current move to finish
   M104 S0 T0           # set hotend temperature to 0
   G92 E0                  # zero extruder position
   SET_FAN_SPEED FAN=pi_fan SPEED=0.5
   M117 Unloaded...


  ################################################
[gcode_macro printer_power]  
description: power
gcode:
  SET_PIN PIN=power VALUE=1.00
  SET_PIN PIN=backlight VALUE=1.00
  STATUS_READY
  SET_FAN_SPEED FAN=pi_fan SPEED=0.35
  ################################################
[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

  ################################################

[gcode_macro CG28]
# Required Macros: CONSOLE_MESSAGE
description: Conditional G28
gcode:

    # Check if printer is homed
    {% if "xyz" not in printer.toolhead.homed_axes %} 
        CONSOLE_MESSAGE MSG="Homing printer"
        G28

    {% else %}
        CONSOLE_MESSAGE MSG="Printer already homed"

    {% endif %}

[gcode_macro CONSOLE_MESSAGE]
gcode:
    {% set msg = params.MSG %}
    {action_respond_info(msg)}


#################

[gcode_macro DELAY]
description: Send `DELAY [H=<value>] [M=<value>] [S=<value>] [P=<value>] ` to set the Hours, Minutes, and Seconds for a delay. Passing no paramaters will not have any delay.
gcode:
	{% set Hours   = params.H|default(0)|int %}
	{% set Minutes = params.M|default(0)|int %}
	{% set Seconds = params.S|default(0)|int %}
	{% set Milliseconds = params.P|default(0)|int %}

	{% set TIME = (((Hours*3600) + (Minutes*60) + (Seconds))*1000)+Milliseconds|int %}
	
	{action_respond_info('Delaying for {} milliseconds'.format(TIME))}
	G4 P{TIME}

#################################

[gcode_macro WIFI_OFF]
gcode:
    {% if printer.has_ethernet(eth0) and printer.ethernet_connected(eth0) %}
        EXECUTE M303 E-1 P3 S"sudo ifconfig wlan0 down"
    {% endif %}

################################

 [gcode_macro RES_TEST]
description: Run input shaper test
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  _CG28                                                 ; home if needed
  TURN_OFF_HEATERS                                      ; turn off heaters
  M107                                                  ; turn off fan
  {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
  {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
  _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
  _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
  TEST_RESONANCES AXIS=X                                ; measure X
  _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
  TEST_RESONANCES AXIS=Y                                ; measure Y
  _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
  _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER


# Shell Comand is not supported by a default klipper installation
[gcode_shell_command plot_graph]
command: bash /home/pi/klipper_config/script/plot_graph.sh
timeout: 60.0
verbose: True

##################################################
##Zippy Guides-Probe Limits##
##########################################################

# Macro to calculate the probe min/max/current coordinates

##########################DEPENDENCIES##########################
# 
# This config section is required to output text to the console
# which is used by the macro. If you already have an equivalent
# config section elsewhere, you can comment this one out.
[respond]
# 
################################################################

[gcode_macro GET_PROBE_LIMITS]
description: Calculates the probe min/max/current coordinates
gcode: 
    {% set config = printer.configfile.settings %}
    # Find probe config in configfile
    {% if config["bltouch"] %}
        # bltouch section found
        {% set probe = config["bltouch"] %}
        {% set has_probe = True %}
    {% elif config["probe"] %}
        # probe section found
        {% set probe = config["probe"] %}
        {% set has_probe = True %}
    {% elif config["beacon"] %}
        # probe section found
        {% set probe = config["beacon"] %}
        {% set has_probe = True %}
    {% else %}
        # No probe or bltouch sections found
        RESPOND MSG="Failed to detect probe in configfile"
    {% endif %}
    {% if has_probe %}
        {% set stepperx = config["stepper_x"] %}
        {% set steppery = config["stepper_y"] %}
        {% set xprobemin = stepperx["position_min"]|float + probe["x_offset"]|float %} 
        {% set xprobemax = stepperx["position_max"]|float + probe["x_offset"]|float %} 
        {% set yprobemin = steppery["position_min"]|float + probe["y_offset"]|float %} 
        {% set yprobemax = steppery["position_max"]|float + probe["y_offset"]|float %}
        RESPOND MSG="Configured Probe X-Offset {probe.x_offset}"
        RESPOND MSG="Configured Probe Y-Offset {probe.y_offset}"
        {% if probe.z_offset is defined %}
            RESPOND MSG="Configured Probe Z-Offset {probe.z_offset}"
        {% elif probe.trigger_distance is defined %}
            RESPOND MSG="Configured Probe Trigger Distance {probe.trigger_distance}"
        {% endif %}
        RESPOND MSG="Minimum PROBE position X={xprobemin} Y={yprobemin}" 
        RESPOND MSG="Maximum PROBE position X={xprobemax} Y={yprobemax}"
        # check if printer homed
        {% if "xyz" in printer.toolhead.homed_axes %} 
            {% set curprobex = printer.toolhead.position.x|float + probe["x_offset"]|float %} 
            {% set curprobey = printer.toolhead.position.y|float + probe["y_offset"]|float %} 
            RESPOND MSG="Current PROBE position X={curprobex} Y={curprobey}"
        {% endif %}
    {% endif %}
##########
# MACROS #
##########

# The following status macros are available (these go inside of your macros):
#
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
#
# With additional macros for basic control:
#
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF

  
